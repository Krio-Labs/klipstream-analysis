#!/usr/bin/env bash
# direnv configuration for KlipStream Analysis
# This file automatically loads environment variables when you enter the project directory

# Load environment variables from .env file if it exists
if [ -f .env ]; then
    dotenv .env
fi

# Load environment variables from .env.yaml file if it exists
if [ -f .env.yaml ]; then
    echo "Note: .env.yaml file detected. Make sure to load it manually in your application."
fi

# Set default values for development
export PORT=3000
export BASE_DIR="."
export USE_GCS=false
export GCS_PROJECT=klipstream

# Python environment
export PYTHONPATH="${PWD}:${PYTHONPATH}"
export PYTHONUNBUFFERED=1
export PYTHONIOENCODING=UTF-8

# .NET environment for TwitchDownloaderCLI
export DOTNET_BUNDLE_EXTRACT_BASE_DIR="${HOME}/.dotnet/bundle_extract"

# Create necessary directories
mkdir -p ~/.dotnet/bundle_extract
mkdir -p output/{raw,analysis}/{videos,audio,transcripts,waveforms,chat}
mkdir -p downloads/temp
mkdir -p data
mkdir -p logs

echo "‚úÖ KlipStream Analysis environment loaded"
echo "üìÅ Project directory: ${PWD}"
echo "üêç Python path: ${PYTHONPATH}"
echo "üîß Base directory: ${BASE_DIR}"
echo "‚òÅÔ∏è  Using GCS: ${USE_GCS}"

# Check for required environment variables
required_vars=("DEEPGRAM_API_KEY" "NEBIUS_API_KEY" "CONVEX_URL" "CONVEX_API_KEY")
missing_vars=()

for var in "${required_vars[@]}"; do
    if [ -z "${!var}" ]; then
        missing_vars+=("$var")
    fi
done

if [ ${#missing_vars[@]} -gt 0 ]; then
    echo "‚ö†Ô∏è  Missing required environment variables:"
    printf '   - %s\n' "${missing_vars[@]}"
    echo "   Please add them to your .env file"
else
    echo "‚úÖ All required environment variables are set"
fi
